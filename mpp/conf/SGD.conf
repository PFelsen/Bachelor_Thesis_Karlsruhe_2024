# ----- Problem Settings -----
Protocol = OCLaplace2D
#Protocol = OCStochasticLaplace2D
#Protocol = OCStochasticLaplace3D
Model = LagrangeElliptic
#Model = MixedElliptic
#Model = HybridElliptic
#Model = DGElliptic
degree = 1
#degree = 2
Quantity = L2Error
#Functional = Energy
#Funcitonal = H1
#Functional = Outflow
#Functional = Goal

run = SGD

# ----- Stochastic Gradient Descent -----
level = 4

#Sets type for gradient estimation in descent
GradEst = SGD #single Realization
#GradEst = MC #MC Estimator for Gradient
#GradEst = MLMC #not implemented yet

targetCost = 0.0 #regularisation parameter of target functional
u_a = -1000 #lower bound on control parameter u
u_b = 1000 #upper bound on control parameter u

alpha = 1.0 #averages from i=alpha*maxSteps to maxSteps. If==1 no averaging happens. if==0, takes all iterates
M = 1 # number of realizations for the mc estimator in the st gradient descent

#sets breakpoint arguments
breakpoint_criteria = iterations
maxSteps = 100 #number of iterations

descentType = SGD
#descentType = ADAM

gammaADAM = 0.568 #adam
theta = 55 #stepsize param for lam_reg>ÃŸ
nu = 10 #stepsize param for lam_reg>0
gamma = 1000 #sgd - lam_reg=0

#secondaryQOI = difference #quantity of interest type for u.l2
secondaryQOI = value #quantity of interest type for u.l2
overkill = false #if true -> estimates j(u_k) in every step
load_test = false #to test the load_rhs function
est_sample_size = 1 #number of realizations it uses to estimate the target function value (for det case ==1)

stepsizeRule = constant
#stepsizeRule = decreasing


# ----- Stochastic Field -----
StochasticField = LogNormal
Mean = 0.0
sigma = 1.0
lambda = [0.15, 0.15, 0.15]
smoothing = 1.0 #Parameter s

# ----- Plotting -----
VtuPlot = 0

# ----- Verbose -----
SGDVerbose = 2
SLEstimatorVerbose = 1
MLMCVerbose = 1
MainVerbose = 1
MeshVerbose = 0
MeshesVerbose = 0
ConfigVerbose = 1
LinearVerbose = 0
NewtonVerbose = 0
AssembleVerbose = 0
PDESolverVerbose = 0
GeneratorVerbose = 0



