stages:
  - build
  - test
  - downstream
  - benchmark
  - publish

include:
  - local: 'pipeline/.mpp-ci-templates.yml'
  - local: 'pipeline/downstream.yml'
  - local: 'pipeline/tutorial-notebooks.yml'
  - local: 'pipeline/tutorial-benchmark-on-horeka.yml'
  - local: 'pipeline/spacetime-benchmarks-on-horeka.yml'
  - local: 'pipeline/mlmc-notebooks.yml'
  - local: 'pipeline/sgd-elliptic-on-horeka.yml'
  - local: 'pipeline/.mluq-benchmark-on-horeka.yml'
  - local: 'pipeline/mlmc-elliptic-on-horeka.yml'
  - local: 'pipeline/mlmc-transport-on-horeka.yml'
  - local: 'pipeline/mlmc-acoustic-time-stepping-on-horeka.yml'
  - local: 'pipeline/mlmc-acoustic-space-time-on-horeka.yml'

variables:
  extends: .global-variables
  BENCHMARK: 'none'
  PRIORITY: 'frequently'
  UPSTREAM_COMMIT: ${CI_COMMIT_SHA}
  UPSTREAM_PIPELINE_ID: ${CI_PIPELINE_ID}
  RUN_PROJECTS: 'all'

# ----------------------------------- build -----------------------------------

build-mpp1d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=ON -DSPACE_DIM=1 -DUSE_CXSC=ON -DBUILD_IA_TESTS=ON -USE_FFTW=ON -USE_SPLITTED_COMMS=ON'
    JOB_PRIORITY: 'nightly'

build-mpp2d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=ON -DSPACE_DIM=2 -DUSE_CXSC=ON -DBUILD_IA_TESTS=ON -USE_FFTW=ON -USE_SPLITTED_COMMS=ON'
    JOB_PRIORITY: 'nightly'

build-mpp:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=ON -DUSE_CXSC=OFF -DBUILD_IA_TESTS=OFF -USE_FFTW=ON -USE_SPLITTED_COMMS=ON -DBUILD_TUTORIAL=OFF -DBUILD_TUTORIAL_TESTS=OFF'
    JOB_PRIORITY: 'frequently'

build-mpp-ia:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=ON -DUSE_CXSC=ON -DBUILD_IA_TESTS=ON -USE_FFTW=ON -USE_SPLITTED_COMMS=ON'
    JOB_PRIORITY: 'nightly'

build-tutorial-and-uq-2d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=OFF -DSPACE_DIM=2 -DBUILD_TUTORIAL=ON -DBUILD_TUTORIAL_TESTS=ON -DBUILD_UQ=ON -DBUILD_UQ_TESTS=ON'
    JOB_PRIORITY: 'frequently'

build-tutorial-spacetime:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=OFF -DBUILD_TUTORIAL=ON -DBUILD_TUTORIAL_TESTS=ON -DUSE_SPACETIME=ON -DBUILD_UQ=OFF'
    JOB_PRIORITY: 'nightly'

build-spacetime1d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=OFF -DUSE_SPACETIME=ON -DBUILD_SPACETIME_TESTS=ON -DSPACE_DIM=1'
    JOB_PRIORITY: 'nightly'

build-spacetime2d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=OFF -DUSE_SPACETIME=ON -DBUILD_SPACETIME_TESTS=ON -DSPACE_DIM=2'
    JOB_PRIORITY: 'frequently'

build-spacetime3d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TESTS=OFF -DUSE_SPACETIME=ON -DBUILD_SPACETIME_TESTS=ON -DSPACE_DIM=3'
    JOB_PRIORITY: 'nightly'

build-tutorial-and-uq-3d:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TUTORIAL=ON -DBUILD_TUTORIAL_TESTS=ON -DUSE_SPACETIME=OFF -DBUILD_SPACETIME_TESTS=OFF -DSPACE_DIM=3 -DBUILD_UQ=ON -DBUILD_UQ_TESTS=ON'
    JOB_PRIORITY: 'nightly'

build-uq-st:
  extends: .build_template
  variables:
    CMAKE_ARGS: '-DMPP_BUILD_TYPE=MppDebugFast -DBUILD_TUTORIAL=ON -DBUILD_TUTORIAL_TESTS=OFF -DUSE_SPACETIME=ON -DBUILD_SPACETIME_TESTS=OFF -DSPACE_DIM=2 -DBUILD_UQ=ON'
    JOB_PRIORITY: 'frequently'

# ----------------------------------- test ------------------------------------

ctest-mpp1d:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'nightly'
  dependencies:
    - build-mpp1d
  script:
    - ctest --output-on-failure

ctest-mpp2d:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'nightly'
  dependencies:
    - build-mpp2d
  script:
    - ctest --output-on-failure

ctest-mpp:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-mpp
  script:
    - ctest --output-on-failure

ctest-spacetime1d:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'nightly'
  dependencies:
    - build-spacetime1d
  script:
    - ctest --output-on-failure

ctest-spacetime2d:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-spacetime2d
  script:
    - ctest --output-on-failure

ctest-spacetime3d:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'nightly'
  dependencies:
    - build-spacetime3d
  script:
    - ctest --output-on-failure

ctest-tutorial-and-uq:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-tutorial-and-uq-2d
  script:
    - ctest

mpitest-mpp:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-mpp
  script:
    - python3 mppyrun.py --mpi_tests=1 --mute=1

mpitest-tutorial-and-uq-2d:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-tutorial-and-uq-2d
  script:
    - python3 mppyrun.py --mpi_tests=1 --mute=0

#mpitest-tutorial-and-uq-3d:
#  extends: .test_template
#  variables:
#    JOB_PRIORITY: 'nightly'
#  dependencies:
#    - build-tutorial-and-uq-3d
#  script:
#    - python3 mppyrun.py --mpi_tests=1 --mute=1

mpitest-tutorial-spacetime:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'nightly'
  dependencies:
    - build-tutorial-spacetime
  script:
    - mpirun -n 4 tests/test6_app/tutorial/TestPollutionProblemMPI

mpitest-spacetime:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-spacetime2d
  script:
    - python3 mppyrun.py --mpi_tests=1 --mute=0

mppytest:
  extends: .test_template
  variables:
    JOB_PRIORITY: 'frequently'
  dependencies:
    - build-mpp
  before_script:
    - cd build/python/mppy/tests/
  script:
    -  python3 -m unittest -v test_vtu_utilities.py
    -  python3 -m unittest -v test_log_utilities.py

#mpitest-mluq-st:
#  extends: .test_template
#  dependencies:
#    - build-uq-st
#  script:
#    - echo "todo include tests again"
#    - cd mluq/tests
#    - mpirun -n 4 TestMonteCarloMPI

# -------------------------------- downstream ---------------------------------
# See -> pipelines/.downstream.yml

# --------------------------------- benchmark ---------------------------------
# See -> pipelines/.tutorial-notebooks.yml           <- nightly jobs
#     -> pipelines/.tutorial-benchmark-on-horeka.yml <- via tag or manually triggered

# ---------------------------------- deploy -----------------------------------

radar4mpp:
  # For final publication go to: https://radar.kit.edu/radar
  # radar4ianm container: https://git.scc.kit.edu/ianm3/radar4ianm
  stage: publish
  only:
    - tags
  image: ${MPP_REGISTRY}/ianm_release/radar4ianm:latest
  script:
    - echo ${RADAR_CONFIG}
    - python3 pipeline/radar4mpp.py --tag ${CI_COMMIT_TAG}
    - radar_upload . --config ${RADAR_CONFIG} --meta metadata.json
  tags:
    - k8s
