.benchmark_sgd_on_horeka:
  extends: .benchmark_on_horeka
  only:
    variables:
      - $BENCHMARK == $CI_JOB_NAME || $BENCHMARK == 'all' || $BENCHMARK == 'on-horeka' || $BENCHMARK == 'sgd-on-horeka'
  variables:
    USE_MPP_DATA: 'true'
    USE_LSDF: 'false'
    WTIME: '01:00:00'
    PROCS: '32'
    LABEL: ''
    NODES: ''
    CONFIG: ''
    CMAKE_ARGS: '-DBUILD_MLUQ_TESTS=OFF -DBUILD_TUTORIAL_TESTS=OFF -DMPP_BUILD_TYPE=MppRelease'
    SALLOC: 'salloc -p cpuonly -t $WTIME -N $NODES -n $PROCS mpirun SGD-M++ $CONFIG logfile=UseConfigEntries[$LABEL] WTime=$WTIME'

  after_script:
    - cd $(ws_find mpp-build-${CI_JOB_NAME})
    #- for jobid in `sacct -P --delimiter=" " | grep ${CI_JOB_NAME}-${CI_PIPELINE_ID} | awk {' print $1 '}`; do seff $jobid; done
    - module load jupyter/base/2022-03-30
    - python3 -c "from sgdmppy import mppy, plot_results;
      mpp = mppy.Mpp(project_name='SGD', build_dir='$WORKSPACE');
      mpp.parse_log(log_file='all');
      plot_results(mpp, '$CI_JOB_NAME', type='$LABEL', save_plot = True, show_plot = False);
      "
    - cd pipeline
    - ./archive.sh

oc-elliptic-overview-on-horeka:
  extends: .benchmark_sgd_on_horeka
  variables:
    CONFIG: 'sgd_elliptic'
    NODES: '1'
    LABEL: 'overview'
  script:
    - salloc -p cpuonly -t 00:20:00 -N 1 -n 32 mpirun SGD-M++ sgd_elliptic level=5 descent_type='ADAM'
    - salloc -p cpuonly -t 00:20:00 -N 1 -n 32 mpirun SGD-M++ sgd_elliptic level=5 descent_type='SGD' alpha=0.0
    - salloc -p cpuonly -t 00:20:00 -N 1 -n 32 mpirun SGD-M++ sgd_elliptic level=5 descent_type='SGD'
    - salloc -p cpuonly -t 00:20:00 -N 1 -n 32 mpirun SGD-M++ sgd_elliptic level=5 descent_type='SGD' step_size_rule='decreasing' gamma=250 alpha=0.0
    - salloc -p cpuonly -t 00:20:00 -N 1 -n 32 mpirun SGD-M++ sgd_elliptic level=5 descent_type='SGD' step_size_rule='decreasing' gamma=250

